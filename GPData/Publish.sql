/*
Deployment script for GPData

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar RunAutomatedScripts "false"
:setvar DatabaseName "GPData"
:setvar DefaultFilePrefix "GPData"
:setvar DefaultDataPath "/var/opt/mssql/data/"
:setvar DefaultLogPath "/var/opt/mssql/data/"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL)
BEGIN
    DECLARE @rc      int,                       -- return code
            @fn      nvarchar(4000),            -- file name for back up
            @dir     nvarchar(4000)             -- backup directory

    EXEC @rc = [master].[dbo].[xp_instance_regread] N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer', N'BackupDirectory', @dir output, 'no_output'
    if (@rc = 0) SELECT @dir = @dir + N'\'

    IF (@dir IS NULL)
    BEGIN 
        EXEC @rc = [master].[dbo].[xp_instance_regread] N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\MSSQLServer', N'DefaultData', @dir output, 'no_output'
        if (@rc = 0) SELECT @dir = @dir + N'\'
    END

    IF (@dir IS NULL)
    BEGIN
        EXEC @rc = [master].[dbo].[xp_instance_regread] N'HKEY_LOCAL_MACHINE', N'Software\Microsoft\MSSQLServer\Setup', N'SQLDataRoot', @dir output, 'no_output'
        if (@rc = 0) SELECT @dir = @dir + N'\Backup\'
    END

    IF (@dir IS NULL)
    BEGIN
        SELECT @dir = N'$(DefaultDataPath)'
    END

    SELECT  @fn = @dir + N'$(DatabaseName)' + N'-' + 
            CONVERT(nchar(8), GETDATE(), 112) + N'-' + 
            RIGHT(N'0' + RTRIM(CONVERT(nchar(2), DATEPART(hh, GETDATE()))), 2) + 
            RIGHT(N'0' + RTRIM(CONVERT(nchar(2), DATEPART(mi, getdate()))), 2) + 
            RIGHT(N'0' + RTRIM(CONVERT(nchar(2), DATEPART(ss, getdate()))), 2) + 
            N'.bak' 
            BACKUP DATABASE [$(DatabaseName)] TO DISK = @fn
END
GO
USE [$(DatabaseName)];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK_Practicioner_Address_Practicioner]...';


GO
ALTER TABLE [dbo].[Practicioner_Address] DROP CONSTRAINT [FK_Practicioner_Address_Practicioner];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK__AllergyIn__Recor__2FCF1A8A]...';


GO
ALTER TABLE [dbo].[AllergyIntollerance] DROP CONSTRAINT [FK__AllergyIn__Recor__2FCF1A8A];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK__Immunizat__NoteA__73BA3083]...';


GO
ALTER TABLE [dbo].[Immunization] DROP CONSTRAINT [FK__Immunizat__NoteA__73BA3083];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK_ProcedureRequest_RequestingPracticioner]...';


GO
ALTER TABLE [dbo].[ProcedureRequest] DROP CONSTRAINT [FK_ProcedureRequest_RequestingPracticioner];


GO
PRINT N'Dropping SqlForeignKeyConstraint unnamed constraint on [dbo].[Specimen]...';


GO
ALTER TABLE [dbo].[Specimen] DROP CONSTRAINT [FK__Specimen__Collec__11158940];


GO
PRINT N'Dropping SqlForeignKeyConstraint unnamed constraint on [dbo].[MedicationDispenseRequest]...';


GO
ALTER TABLE [dbo].[MedicationDispenseRequest] DROP CONSTRAINT [FK__Medicatio__Perfo__531856C7];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK__Condition__Asser__42E1EEFE]...';


GO
ALTER TABLE [dbo].[Condition] DROP CONSTRAINT [FK__Condition__Asser__42E1EEFE];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK__Immunizat__Actor__71D1E811]...';


GO
ALTER TABLE [dbo].[Immunization] DROP CONSTRAINT [FK__Immunizat__Actor__71D1E811];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK__Encounter__Perfo__4222D4EF]...';


GO
ALTER TABLE [dbo].[Encounter] DROP CONSTRAINT [FK__Encounter__Perfo__4222D4EF];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK__Encounter__Recor__4316F928]...';


GO
ALTER TABLE [dbo].[Encounter] DROP CONSTRAINT [FK__Encounter__Recor__4316F928];


GO
PRINT N'Dropping SqlForeignKeyConstraint unnamed constraint on [dbo].[Observation]...';


GO
ALTER TABLE [dbo].[Observation] DROP CONSTRAINT [FK__Observati__Perfo__5AB9788F];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK_PracticionerRole_Practicioner]...';


GO
ALTER TABLE [dbo].[PracticionerRole] DROP CONSTRAINT [FK_PracticionerRole_Practicioner];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK_Patient_Practicioner]...';


GO
ALTER TABLE [dbo].[Patient] DROP CONSTRAINT [FK_Patient_Practicioner];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK__Medicatio__Recor__3B40CD36]...';


GO
ALTER TABLE [dbo].[MedicationRequest] DROP CONSTRAINT [FK__Medicatio__Recor__3B40CD36];


GO
PRINT N'Dropping SqlForeignKeyConstraint unnamed constraint on [dbo].[Practicioner]...';


GO
ALTER TABLE [dbo].[Practicioner] DROP CONSTRAINT [FK__Practicio__Addre__6BE40491];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK_Compositio_Practicioner]...';


GO
ALTER TABLE [dbo].[Composition] DROP CONSTRAINT [FK_Compositio_Practicioner];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK_PracticionerRole_Location]...';


GO
ALTER TABLE [dbo].[PracticionerRole] DROP CONSTRAINT [FK_PracticionerRole_Location];


GO
PRINT N'Dropping SqlForeignKeyConstraint [dbo].[FK_PracticionerRole_Organization]...';


GO
ALTER TABLE [dbo].[PracticionerRole] DROP CONSTRAINT [FK_PracticionerRole_Organization];


GO
PRINT N'Altering SqlTable [dbo].[Organization]...';


GO
ALTER TABLE [dbo].[Organization] ALTER COLUMN [OriginalId] NVARCHAR (255) NOT NULL;


GO
/*
The column [dbo].[Practicioner].[Reference] is being dropped, data loss could occur.

The column [dbo].[Practicioner].[OriginalId] on table [dbo].[Practicioner] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/
GO
PRINT N'Starting rebuilding table [dbo].[Practicioner]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_Practicioner] (
    [Id]               UNIQUEIDENTIFIER NOT NULL,
    [OriginalId]       NVARCHAR (255)   NOT NULL,
    [SdsUserId]        NVARCHAR (50)    NULL,
    [SdsRoleProfileId] NVARCHAR (50)    NULL,
    [Title]            NVARCHAR (20)    NULL,
    [GivenName]        NVARCHAR (100)   NOT NULL,
    [MiddleNames]      NVARCHAR (250)   NULL,
    [Surname]          NVARCHAR (100)   NOT NULL,
    [Gender]           NVARCHAR (10)    NULL,
    [DateOfBirthUtc]   DATETIME         NULL,
    [AddressID]        UNIQUEIDENTIFIER NULL,
    PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[Practicioner])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_Practicioner] ([Id], [SdsUserId], [SdsRoleProfileId], [Title], [GivenName], [MiddleNames], [Surname], [Gender], [DateOfBirthUtc], [AddressID])
        SELECT   [Id],
                 [SdsUserId],
                 [SdsRoleProfileId],
                 [Title],
                 [GivenName],
                 [MiddleNames],
                 [Surname],
                 [Gender],
                 [DateOfBirthUtc],
                 [AddressID]
        FROM     [dbo].[Practicioner]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[Practicioner];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_Practicioner]', N'Practicioner';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
/*
The column [dbo].[PracticionerRole].[OriginalId] on table [dbo].[PracticionerRole] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/
GO
PRINT N'Starting rebuilding table [dbo].[PracticionerRole]...';


GO
BEGIN TRANSACTION;

SET TRANSACTION ISOLATION LEVEL SERIALIZABLE;

SET XACT_ABORT ON;

CREATE TABLE [dbo].[tmp_ms_xx_PracticionerRole] (
    [Id]             UNIQUEIDENTIFIER NOT NULL,
    [OriginalId]     NVARCHAR (255)   NOT NULL,
    [Active]         BIT              NULL,
    [PeriodStart]    DATETIME         NULL,
    [PeriodEnd]      DATETIME         NULL,
    [Practicioner]   UNIQUEIDENTIFIER NOT NULL,
    [Organization]   UNIQUEIDENTIFIER NULL,
    [SDSJobRoleName] NVARCHAR (100)   NULL,
    [Speciality]     NVARCHAR (100)   NULL,
    [Location]       UNIQUEIDENTIFIER NULL,
    [Telecom]        NVARCHAR (50)    NULL,
    CONSTRAINT [tmp_ms_xx_constraint_PK_PracticionerRole1] PRIMARY KEY CLUSTERED ([Id] ASC)
);

IF EXISTS (SELECT TOP 1 1 
           FROM   [dbo].[PracticionerRole])
    BEGIN
        INSERT INTO [dbo].[tmp_ms_xx_PracticionerRole] ([Id], [Active], [PeriodStart], [PeriodEnd], [Practicioner], [Organization], [SDSJobRoleName], [Speciality], [Location], [Telecom])
        SELECT   [Id],
                 [Active],
                 [PeriodStart],
                 [PeriodEnd],
                 [Practicioner],
                 [Organization],
                 [SDSJobRoleName],
                 [Speciality],
                 [Location],
                 [Telecom]
        FROM     [dbo].[PracticionerRole]
        ORDER BY [Id] ASC;
    END

DROP TABLE [dbo].[PracticionerRole];

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_PracticionerRole]', N'PracticionerRole';

EXECUTE sp_rename N'[dbo].[tmp_ms_xx_constraint_PK_PracticionerRole1]', N'PK_PracticionerRole', N'OBJECT';

COMMIT TRANSACTION;

SET TRANSACTION ISOLATION LEVEL READ COMMITTED;


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_Practicioner_Address_Practicioner]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Practicioner_Address] WITH NOCHECK
    ADD CONSTRAINT [FK_Practicioner_Address_Practicioner] FOREIGN KEY ([PracticionerId]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK__AllergyIn__Recor__2FCF1A8A]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[AllergyIntollerance] WITH NOCHECK
    ADD CONSTRAINT [FK__AllergyIn__Recor__2FCF1A8A] FOREIGN KEY ([Recorder]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK__Immunizat__NoteA__73BA3083]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Immunization] WITH NOCHECK
    ADD CONSTRAINT [FK__Immunizat__NoteA__73BA3083] FOREIGN KEY ([NoteAuthorId]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_ProcedureRequest_RequestingPracticioner]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[ProcedureRequest] WITH NOCHECK
    ADD CONSTRAINT [FK_ProcedureRequest_RequestingPracticioner] FOREIGN KEY ([RequestingPracticioner]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint unnamed constraint on [dbo].[Specimen]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Specimen] WITH NOCHECK
    ADD FOREIGN KEY ([CollectorId]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint unnamed constraint on [dbo].[MedicationDispenseRequest]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[MedicationDispenseRequest] WITH NOCHECK
    ADD FOREIGN KEY ([PerformerGuid]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK__Condition__Asser__42E1EEFE]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Condition] WITH NOCHECK
    ADD CONSTRAINT [FK__Condition__Asser__42E1EEFE] FOREIGN KEY ([Asserter]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK__Immunizat__Actor__71D1E811]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Immunization] WITH NOCHECK
    ADD CONSTRAINT [FK__Immunizat__Actor__71D1E811] FOREIGN KEY ([ActorId]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK__Encounter__Perfo__4222D4EF]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Encounter] WITH NOCHECK
    ADD CONSTRAINT [FK__Encounter__Perfo__4222D4EF] FOREIGN KEY ([PerformerId]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK__Encounter__Recor__4316F928]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Encounter] WITH NOCHECK
    ADD CONSTRAINT [FK__Encounter__Recor__4316F928] FOREIGN KEY ([RecorderId]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint unnamed constraint on [dbo].[Observation]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Observation] WITH NOCHECK
    ADD FOREIGN KEY ([PerformerId]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_PracticionerRole_Practicioner]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[PracticionerRole] WITH NOCHECK
    ADD CONSTRAINT [FK_PracticionerRole_Practicioner] FOREIGN KEY ([Practicioner]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_Patient_Practicioner]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Patient] WITH NOCHECK
    ADD CONSTRAINT [FK_Patient_Practicioner] FOREIGN KEY ([Practicioner]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK__Medicatio__Recor__3B40CD36]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[MedicationRequest] WITH NOCHECK
    ADD CONSTRAINT [FK__Medicatio__Recor__3B40CD36] FOREIGN KEY ([RecorderGuid]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint unnamed constraint on [dbo].[Practicioner]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Practicioner] WITH NOCHECK
    ADD FOREIGN KEY ([AddressID]) REFERENCES [dbo].[Address] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_Compositio_Practicioner]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[Composition] WITH NOCHECK
    ADD CONSTRAINT [FK_Compositio_Practicioner] FOREIGN KEY ([Author]) REFERENCES [dbo].[Practicioner] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_PracticionerRole_Location]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[PracticionerRole] WITH NOCHECK
    ADD CONSTRAINT [FK_PracticionerRole_Location] FOREIGN KEY ([Location]) REFERENCES [dbo].[Location] ([Id]);


GO
PRINT N'Creating SqlForeignKeyConstraint [dbo].[FK_PracticionerRole_Organization]...';


GO
WAITFOR DELAY '00:00.010';

ALTER TABLE [dbo].[PracticionerRole] WITH NOCHECK
    ADD CONSTRAINT [FK_PracticionerRole_Organization] FOREIGN KEY ([Organization]) REFERENCES [dbo].[Organization] ([Id]);


GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

IF NOT EXISTS (SELECT * FROM [dbo].[EntityType])
BEGIN
	-- Disable constraints for all tables:
	EXEC sp_msforeachtable 'ALTER TABLE ? NOCHECK CONSTRAINT all'

	INSERT [dbo].[EntityType] ([EntityType], [EntityName]) VALUES (1,N'Organization')
	INSERT [dbo].[EntityType] ([EntityType], [EntityName]) VALUES (2,N'Location')
	INSERT [dbo].[EntityType] ([EntityType], [EntityName]) VALUES (3,N'Patient')
	INSERT [dbo].[EntityType] ([EntityType], [EntityName]) VALUES (4,N'Practitioner')
	
	-- Re-enable constraints for all tables:
	EXEC sp_msforeachtable 'ALTER TABLE ? WITH CHECK CHECK CONSTRAINT all';	

END
GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
ALTER TABLE [dbo].[Practicioner_Address] WITH CHECK CHECK CONSTRAINT [FK_Practicioner_Address_Practicioner];

ALTER TABLE [dbo].[AllergyIntollerance] WITH CHECK CHECK CONSTRAINT [FK__AllergyIn__Recor__2FCF1A8A];

ALTER TABLE [dbo].[Immunization] WITH CHECK CHECK CONSTRAINT [FK__Immunizat__NoteA__73BA3083];

ALTER TABLE [dbo].[ProcedureRequest] WITH CHECK CHECK CONSTRAINT [FK_ProcedureRequest_RequestingPracticioner];

ALTER TABLE [dbo].[Condition] WITH CHECK CHECK CONSTRAINT [FK__Condition__Asser__42E1EEFE];

ALTER TABLE [dbo].[Immunization] WITH CHECK CHECK CONSTRAINT [FK__Immunizat__Actor__71D1E811];

ALTER TABLE [dbo].[Encounter] WITH CHECK CHECK CONSTRAINT [FK__Encounter__Perfo__4222D4EF];

ALTER TABLE [dbo].[Encounter] WITH CHECK CHECK CONSTRAINT [FK__Encounter__Recor__4316F928];

ALTER TABLE [dbo].[PracticionerRole] WITH CHECK CHECK CONSTRAINT [FK_PracticionerRole_Practicioner];

ALTER TABLE [dbo].[Patient] WITH CHECK CHECK CONSTRAINT [FK_Patient_Practicioner];

ALTER TABLE [dbo].[MedicationRequest] WITH CHECK CHECK CONSTRAINT [FK__Medicatio__Recor__3B40CD36];

ALTER TABLE [dbo].[Composition] WITH CHECK CHECK CONSTRAINT [FK_Compositio_Practicioner];

ALTER TABLE [dbo].[PracticionerRole] WITH CHECK CHECK CONSTRAINT [FK_PracticionerRole_Location];

ALTER TABLE [dbo].[PracticionerRole] WITH CHECK CHECK CONSTRAINT [FK_PracticionerRole_Organization];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.Specimen'), OBJECT_ID(N'dbo.MedicationDispenseRequest'), OBJECT_ID(N'dbo.Observation'), OBJECT_ID(N'dbo.Practicioner'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
